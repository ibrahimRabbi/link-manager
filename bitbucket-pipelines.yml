# Bitbucket Pipeline for deploying LM-UI to staging and production

image: node:18.10.0-alpine

definitions:
  caches:
    node: node_modules

  variables:
    SENTRY_DSN: $SENTRY_DSN
    LM_REST_API_URL: $LM_REST_API_URL
    JIRA_OSLC_API_URL: $JIRA_OSLC_API_URL
    GITLAB_OSLC_API_URL: $GITLAB_OSLC_API_URL
    GLIDE_OSLC_API_URL: $GLIDE_OSLC_API_URL
    VALISPACE_OSLC_API_URL: $VALISPACE_OSLC_API_URL
    CODEBEAMER_OSLC_API_URL: $CODEBEAMER_OSLC_API_URL

  steps:
    - step: &lint
        name: 'Lint'
        caches:
          - node
        script:
          - yarn install
          - yarn run lint src/

    - step: &build
        name: 'Build'
        caches:
          - node
        script:
          - touch .env
          - echo "NODE_ENV=development" >> .env
          - echo "VITE_LM_REST_API_URL=$LM_REST_API_URL" >> .env
          - echo "VITE_CONFIGURATION_AWARE=false" >> .env
          - echo "VITE_JIRA_DIALOG_URL=$JIRA_OSLC_API_URL" >> .env
          - echo "VITE_GITLAB_DIALOG_URL=$GITLAB_OSLC_API_URL" >> .env
          - echo "VITE_GLIDE_DIALOG_URL=$GLIDE_OSLC_API_URL" >> .env
          - echo "VITE_VALISPACE_DIALOG_URL=$VALISPACE_OSLC_API_URL" >> .env
          - echo "VITE_CODEBEAMER_DIALOG_URL=$CODEBEAMER_OSLC_API_URL" >> .env
          - echo "VITE_SENTRY_DSN=$SENTRY_DSN" >> .env
          - echo "VITE_MIXPANEL_TOKEN=$MIXPANEL_TOKEN" >> .env
          - yarn install
          - yarn build
        artifacts:
          - dist/**

    - step: &docker-build
        name: 'Docker Build'
        script:
          - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
          - docker build -t $DOCKER_HUB_USER/link-manager-ui:v0.1.0 .
          - docker push $DOCKER_HUB_USER/link-manager-ui:v0.1.0

pipelines:
  default:
    - step: *lint

    - step: *build

  branches:
    develop:
      - step: *lint

      - step: *build

      # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
      - step:
          name: 'Deployment to Test'
          deployment: test
          script:
            - pipe: atlassian/rsync-deploy:0.8.1
              variables:
                USER: $SERVER_USER
                SERVER: $SERVER_IP
                REMOTE_PATH: '/var/www/lm-dev'
                LOCAL_PATH: 'dist/**'

      # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
      - step:
          name: 'Deployment to Staging'
          deployment: staging
          trigger: 'manual'
          script:
            - pipe: atlassian/rsync-deploy:0.11.0
              variables:
                USER: $SERVER_USER
                SERVER: $SERVER_IP
                REMOTE_PATH: $SERVER_PATH
                LOCAL_PATH: $LOCAL_PATH

    main:
      - step: *lint

      - step: *build

      - step:
          name: 'Deployment to Production'
          deployment: production
          trigger: 'manual'
          script:
            - pipe: atlassian/rsync-deploy:0.8.1
              variables:
                USER: $SERVER_USER
                SERVER: $SERVER_IP
                REMOTE_PATH: '/var/www/ui-dev'
                LOCAL_PATH: 'dist/**'

  tags:
    v*.*.*:
      - step: *build

      - step:
          <<: *docker-build
          name: 'Docker Build on Tag'

options:
  docker: true
